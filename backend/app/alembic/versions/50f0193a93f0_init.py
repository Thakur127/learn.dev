"""init

Revision ID: 50f0193a93f0
Revises: 
Create Date: 2024-09-16 23:44:40.166792

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '50f0193a93f0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('topics',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('first_name', sa.String(length=128), nullable=False),
    sa.Column('last_name', sa.String(length=128), nullable=True),
    sa.Column('username', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='user_role'), nullable=True),
    sa.Column('password', sa.String(length=60), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), nullable=False),
    sa.Column('is_super_user', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('provider', sa.Enum('GOOGLE', 'CREDENTIALS', 'GITHUB', name='account_provider'), nullable=False),
    sa.Column('blocked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('challenges',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(length=180), nullable=False),
    sa.Column('slug', sa.String(length=256), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('difficulty_tag', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCE', 'EXPERT', name='difficulty_tag'), nullable=True),
    sa.Column('contributor_id', sa.Uuid(), nullable=False),
    sa.Column('approval', sa.Enum('APPROVED', 'REJECTED', 'PENDING', name='approval_status'), nullable=True),
    sa.Column('approver_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approver_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['contributor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_challenges_slug'), 'challenges', ['slug'], unique=True)
    op.create_table('login_histories',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('last_logged_in', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'last_logged_in', name='last_login_id')
    )
    op.create_table('profiles',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('about', sa.String(length=500), nullable=True),
    sa.Column('image_url', sa.String(length=256), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('challenge_takers',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('challenge_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('ACCEPTED', 'REJECTED', 'PENDING', 'SUBMITTED', name='challenge_status'), nullable=True),
    sa.Column('github_url', sa.String(length=256), nullable=True),
    sa.Column('presentation_video_url', sa.String(length=256), nullable=True),
    sa.Column('deployed_application_url', sa.String(length=256), nullable=True),
    sa.Column('feedback', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'challenge_id'),
    sa.UniqueConstraint('deployed_application_url'),
    sa.UniqueConstraint('github_url'),
    sa.UniqueConstraint('presentation_video_url')
    )
    op.create_table('challenge_topics',
    sa.Column('challenge_id', sa.Uuid(), nullable=False),
    sa.Column('topic_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['challenge_id'], ['challenges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('challenge_id', 'topic_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('challenge_topics')
    op.drop_table('challenge_takers')
    op.drop_table('profiles')
    op.drop_table('login_histories')
    op.drop_index(op.f('ix_challenges_slug'), table_name='challenges')
    op.drop_table('challenges')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('topics')
    # ### end Alembic commands ###
